# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions

name: Build and deploy container app to Azure Web App - SampleWebApp

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: 'ubuntu-latest'

    steps:
    - uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Log in to registry
      uses: docker/login-action@v2
      with:
        registry: https://index.docker.io/v1/
        username: ${{ secrets.AzureAppService_ContainerUsername_15c618ff18464f08870f9cb85e65bc80 }}
        password: ${{ secrets.AzureAppService_ContainerPassword_05a728c05f874fcd9b815cf563b4818b }}

    - name: Build and push container image to registry
      uses: docker/build-push-action@v3
      with:
        push: true
        tags: index.docker.io/${{ secrets.AzureAppService_ContainerUsername_15c618ff18464f08870f9cb85e65bc80 }}/samplewebapp:${{ github.sha }}
        file: ./Dockerfile
        
    - name: Manual Trivy Setup
      uses: aquasecurity/setup-trivy@v0.2.0
      with:
        cache: true
        version: v0.56.1
        
    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@0.28.0
      with:
        image-ref: 'index.docker.io/${{ secrets.AzureAppService_ContainerUsername_fc50d5817d7146b6b05e1383da3f7d2f }}/samplewebapp:${{ github.sha }}'
        format: 'table'
        ignore-unfixed: true
        vuln-type: 'os,library'

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
    - name: Deploy to Azure Web App
      id: deploy-to-webapp
      uses: azure/webapps-deploy@v2
      with:
        app-name: 'SampleWebApp'
        slot-name: 'production'
        publish-profile: ${{ secrets.AzureAppService_PublishProfile_11fcc9d0acc74e279f2184136ad674ae }}
        images: 'index.docker.io/${{ secrets.AzureAppService_ContainerUsername_15c618ff18464f08870f9cb85e65bc80 }}/samplewebapp:${{ github.sha }}'

    - name: Check the deployed service URL
      id: health_check
      run: |
        status_code=$(curl --silent --location --head --output /dev/null --write-out "%{http_code}" "${{ secrets.SAMPLEWEBAPP_URL }}")
        echo "Status Code: $status_code"
        echo "{status_code}={$status_code}" >> $GITHUB_OUTPUT

    - name: Continue if Healthy
      if: ${{ steps.health_check.outputs.status_code == '200' }}
      uses: appleboy/telegram-action@master
      with:
        to: ${{ secrets.TELEGRAM_TO }}
        token: ${{ secrets.TELEGRAM_TOKEN }}
        message: |
          ${{ secrets.SAMPLEWEBAPP_URL }} is Healthy

    - name: Continue if NOT Healthy
      if: ${{ steps.health_check.outputs.status_code != '200' }}
      uses: appleboy/telegram-action@master
      with:
        to: ${{ secrets.TELEGRAM_TO }}
        token: ${{ secrets.TELEGRAM_TOKEN }}
        message: |
          ${{ secrets.SAMPLEWEBAPP_URL }} is NOT Healthy
